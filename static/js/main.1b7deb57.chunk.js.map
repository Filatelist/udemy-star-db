{"version":3,"sources":["components/error-indicator/death-star.svg","components/test-img/aHR0cDovL3d3dy5saXZlc2NpZW5jZS5jb20vaW1hZ2VzL2kvMDAwLzA5My8zNTYvb3JpZ2luYWwvcGxhbmV0MTAuanBn.webp","components/header/index.js","components/header/header.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","services/swapi-service.js","services/dummy-swapi-service.js","components/swapi-service-context/swapi-service-context.js","components/spinner/spiner.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-details/item-details.js","components/item-details/index.js","components/hoc-helpers/with-data.js","components/hoc-helpers/with-swapi-service.js","components/hoc-helpers/with-child-function.js","components/hoc-helpers/compose.js","components/sw-components/planet-details.js","components/sw-components/person-details.js","components/sw-components/starship-details.js","components/item-list/item-list.js","components/item-list/index.js","components/sw-components/item-lists.js","components/Row/index.js","components/Row/row.js","components/pages/planets-page.js","components/pages/people-page.js","components/pages/starships-page.js","components/pages/secret-page.js","components/pages/login-page.js","components/app/index.js","components/app/app.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","onServiceChange","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","to","id","onClick","ErrorIndicator","src","texture","width","height","alt","Component","SwapiService","_apiBase","getPersonImage","concat","getStarshipImage","_ref2","getPlanetImage","_ref3","getAllStarship","_callee","res","regenerator_default","wrap","_context","prev","next","_this","getResource","sent","abrupt","results","map","_transformStarship","stop","getStarship","_callee2","starship","_context2","getAllPeople","_callee3","_context3","_transformPerson","getPerson","_callee4","person","_context4","getAllPlanets","_callee5","_context5","_transformPlanet","getPlanet","_callee6","planet","_context6","_extractId","item","url","match","name","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","population","period","rotation_period","diameter","fetch","this","ok","Error","status","json","body","DummySwapiService","console","log","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","Spinner","RandomPlanet","state","loading","swapiService","onError","err","onPlanetLoaded","setState","updatePlanet","Math","floor","random","then","catch","props","updateInterval","interval","setInterval","clearInterval","_this$state","spinner","spinner_spiner","content","random_planet_PlanetView","defaultProps","PlanetView","Fragment","Record","field","label","PersonDetails","image","updateItem","prevProps","itemId","getData","getImageUrl","_this2","_this$props","_this$state$item","Children","children","child","cloneElement","withData","View","_Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","data","error","inherits","createClass","key","value","update","components_error_indicator","assign","withSwapiService","mapMethodsToProps","Wrapped","serviceProps","withChildFunction","fn","compose","funcs","component","reduceRight","previousValue","item_details","item_details_Record","ItemList","onItemSelected","renderLabel","items","renderName","PersonList","PlanetList","StarshipList","Row","left","right","PlanetsPage","withRouter","history","params","components_Row","sw_components_person_details","push","selectedItem","planet_details","SecretPage","isLoggedIn","react_router","LoginPage","onLogin","App","hasError","components_header","components_random_planet","path","exact","render","StarshipPage","location","starship_details","login_page","secret_page","components_app","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1b7deb57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death-star.fd407a1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/aHR0cDovL3d3dy5saXZlc2NpZW5jZS5jb20vaW1hZ2VzL2kvMDAwLzA5My8zNTYvb3JpZ2luYWwvcGxhbmV0MTAuanBn.d41d8cd9.webp\";","import Header from './header';\r\nexport default Header;\r\n","import React from 'react';\r\nimport './header.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = ({onServiceChange}) =>{\r\n    return(<nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample10\"\r\n                aria-controls=\"navbarsExample10\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <span className=\"Logo float-left\"><Link className=\"flow\" to={'/'}>Star-db</Link></span>\r\n        <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample10\">\r\n\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item m-left\">\r\n                    <Link className=\"nav-link \" to=\"/people/\">People</Link>\r\n                </li>\r\n                <li className=\"nav-item m-left\">\r\n                    <Link className=\"nav-link\" to=\"/planets/\">Planets</Link>\r\n                </li>\r\n                <li className=\"nav-item m-left\">\r\n                    <Link className=\"nav-link\" to=\"/starships/\">Starships</Link>\r\n                </li>\r\n                <li className=\"nav-item m-left\">\r\n                    <Link className=\"nav-link\" to=\"/login\">Log in</Link>\r\n                </li>\r\n                <li className=\"nav-item m-left\">\r\n                    <Link className=\"nav-link\" to=\"/secret\">Secret page</Link>\r\n                </li>\r\n            </ul>\r\n            <button\r\n                onClick={onServiceChange}\r\n                className=\"btn btn-primary btn-sm\">Change service</button>\r\n        </div>\r\n    </nav>);\r\n}\r\nexport default Header;\r\n","import ErrorIndicator from './error-indicator';\r\nexport default ErrorIndicator;\r\n","import React, {Component} from 'react';\r\nimport texture from './death-star.svg';\r\nimport './error-indicator.css';\r\n\r\nexport default class ErrorIndicator extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"err\">\r\n                <img src={texture} width={128} height={128} alt=\"\"/>\r\n                <h2 className=\"h2\">BOOM!</h2>\r\n                <p className=\"p\">something has gone terribly wrong</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class SwapiService{\r\n    _apiBase = 'https://swapi.co/api';\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${res.status}`)\r\n        }\r\n        const body = await res.json();\r\n        return body\r\n    }\r\n\r\n    getPersonImage = ({id}) =>{\r\n        return `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`\r\n    }\r\n    getStarshipImage = ({id}) =>{\r\n        return `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`\r\n    }\r\n    getPlanetImage = ({id}) =>{\r\n        return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n    }\r\n    getAllStarship = async ()=>{\r\n        const res = await this.getResource('/starships/');\r\n        return res.results.map(this._transformStarship);\r\n    }\r\n    getStarship= async (id)=>{\r\n        const starship = await this.getResource(`/starships/${id}`)\r\n        return this._transformStarship(starship)\r\n    }\r\n    getAllPeople= async ()=>{\r\n        const res = await this.getResource('/people/');\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n    getPerson = async(id)=>{\r\n        const person = await this.getResource(`/people/${id}`);\r\n        return this._transformPerson(person)\r\n    }\r\n    getAllPlanets = async ()=>{\r\n        const res = await this.getResource('/planets/')\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n    getPlanet = async (id) =>{\r\n        const planet = await this.getResource(`/planets/${id}`);\r\n        return this._transformPlanet(planet);\r\n    }\r\n\r\n    _extractId = (item)=>{\r\n        const regexp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(regexp)[1];\r\n    }\r\n    _transformStarship = (starship)=>{\r\n        return{\r\n            id: this._extractId(starship),\r\n            name:starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.cost_in_credits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargoCapacity\r\n        }\r\n    }\r\n    _transformPerson = (person)=> {\r\n        return{\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birth_year,\r\n            eyeColor: person.eye_color\r\n        }\r\n    }\r\n    _transformPlanet = (planet) =>{\r\n        return {\r\n            id: this._extractId(planet),\r\n            name:planet.name,\r\n            population:planet.population,\r\n            period: planet.rotation_period,\r\n            diameter:planet.diameter}\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class DummySwapiService{\r\n    _apiBase = 'https://swapi.co/api';\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${res.status}`)\r\n        }\r\n        const body = await res.json();\r\n        return body\r\n    }\r\n\r\n    getPersonImage = ({id}) =>{\r\n        return `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`\r\n    }\r\n    getStarshipImage = ({id}) =>{\r\n        return `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`\r\n    }\r\n    getPlanetImage = ({id}) =>{\r\n        return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n    }\r\n    getAllStarship = async ()=>{\r\n        const res = await this.getResource('/starships/');\r\n        return res.results.map(this._transformStarship);\r\n    }\r\n    getStarship= async (id)=>{\r\n        const starship = await this.getResource(`/starships/${id}`)\r\n        return this._transformStarship(starship)\r\n    }\r\n    getAllPeople= async ()=>{\r\n        const res = await this.getResource('/people/');\r\n        console.log(res);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n    getPerson = async(id)=>{\r\n        const person = await this.getResource(`/people/${id}`);\r\n        return this._transformPerson(person)\r\n    }\r\n    getAllPlanets = async ()=>{\r\n        const res = await this.getResource('/planets/')\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n    getPlanet = async (id) =>{\r\n        const planet = await this.getResource(`/planets/${id}`);\r\n        console.log(this._transformPlanet(planet))\r\n        return this._transformPlanet(planet);\r\n    }\r\n\r\n    _extractId = (item)=>{\r\n        const regexp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(regexp)[1];\r\n    }\r\n    _transformStarship = (starship)=>{\r\n        console.log(starship);\r\n        return{\r\n            id: this._extractId(starship),\r\n            name: 'dummy' + starship.name,\r\n            model: 'dummy' + starship.model,\r\n            manufacturer: 'dummy' + starship.manufacturer,\r\n            costInCredits:starship.cost_in_credits,\r\n            length:starship.length,\r\n            crew: 'dummy' + starship.crew,\r\n            passengers: 'dummy' + starship.passengers,\r\n            cargoCapacity: starship.cargoCapacity\r\n        }\r\n    }\r\n    _transformPerson = (person)=> {\r\n        return{\r\n            id: this._extractId(person),\r\n            name: 'dummy' + person.name,\r\n            gender: 'dummy' + person.gender,\r\n            birthYear: 'dummy' + person.birth_year,\r\n            eyeColor: 'dummy' + person.eye_color\r\n        }\r\n    }\r\n    _transformPlanet = (planet) =>{\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: 'dummy' + planet.name,\r\n            population:planet.population,\r\n            period: planet.rotation_period,\r\n            diameter:planet.diameter}\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst {Provider:SwapiServiceProvider, Consumer:SwapiServiceConsumer} = React.createContext();\r\n\r\nexport {\r\n    SwapiServiceProvider,\r\n    SwapiServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport './spiner.css';\r\nconst Spinner = () =>{\r\n    return(<div className=\"lds-css ng-scope\">\r\n        <div  className=\"lds-double-ring\">\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Spinner;\r\n","import React, {Component} from 'react';\r\nimport './random-planet.css';\r\nimport img from '../test-img/aHR0cDovL3d3dy5saXZlc2NpZW5jZS5jb20vaW1hZ2VzL2kvMDAwLzA5My8zNTYvb3JpZ2luYWwvcGxhbmV0MTAuanBn.webp';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from \"../spinner/spiner\";\r\nimport PropTypes from 'prop-types';\r\nexport default class RandomPlanet extends Component{\r\n    static defaultProps = {\r\n        updateInterval: 5000\r\n    };\r\n    state = {\r\n        planet:{},\r\n        loading: true\r\n    };\r\n\r\n    static propTypes ={\r\n        updateInterval: PropTypes.number\r\n    };\r\n    swapiService = new SwapiService();\r\n\r\n    componentDidMount() {\r\n        const {updateInterval} = this.props;\r\n        this.updatePlanet();\r\n        this.interval = setInterval(this.updatePlanet, 5000);\r\n    }\r\n     componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n     }\r\n\r\n    onError = err => {\r\n\r\n    }\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({planet, loading: false})\r\n    }\r\n    updatePlanet = ()=>{\r\n        const id = Math.floor(Math.random()*25 + 3);\r\n        this.swapiService.getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError);\r\n    }\r\n    render() {\r\n        const {planet, loading} = this.state;\r\n        const spinner = loading?<Spinner className=\"float-center\"></Spinner>:null;\r\n        const content = !loading? <PlanetView planet={planet}></PlanetView>:null;\r\n        return (<div className=\"d-flex m-20 random-planet\">\r\n            {spinner}\r\n            {content}\r\n        </div>);\r\n    }\r\n}\r\nconst PlanetView = ({planet}) =>{\r\n    const {id,name, population,period,diameter} = planet;\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"img\"><img src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"Planet\" width={150}/></div>\r\n            <div className=\"info\">\r\n                <ul>\r\n                    <li className=\"population\">\r\n                        <h5>{name}</h5></li>\r\n\r\n                    <li className=\"population\"><p className=\"pop\">Population: {population}</p></li>\r\n                    <hr/>\r\n                    <li className=\"period\"><p className=\"pop\">Rotation period: {period}</p></li>\r\n                    <hr/>\r\n                    <li className=\"dia\"><p className=\"pop\">Diameter: {diameter}</p></li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import RandomPlanet from './random-planet';\r\nexport default RandomPlanet;\r\n","import React, {Component} from 'react';\r\nimport './person-details.css';\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport Spinner from \"../spinner/spiner\";\r\n\r\nconst Record = ({ item, field, label }) =>{\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <span className=\"term\">{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    );\r\n};\r\n\r\n\r\nexport default class ItemDetails extends Component{\r\n    state = {\r\n        item:null,\r\n        image:null\r\n    };\r\n    swapiService = new SwapiService();\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId\r\n            || this.props.getData !== prevProps.getData||\r\n            this.props.getImageUrl !== prevProps.getImageUrl) {\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n\r\n    updateItem(){\r\n        const {itemId,getData, getImageUrl} = this.props;\r\n        if (!itemId){\r\n            return;\r\n        }\r\n        getData(itemId)\r\n            .then((item)=>this.setState({item, image: getImageUrl(item)}))\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.item){\r\n            return <Spinner></Spinner>\r\n        }\r\n\r\n        const {id,name,gender,birthYear,eyeColor} = this.state.item;\r\n        const {item} = this.state;\r\n        return (\r\n            <div className=\"person-details d-flex\">\r\n                <div className=\"image\">\r\n                    <img src={this.state.image} alt=\"\" width=\"150\"/>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h4>{name}</h4>\r\n                    <ul className=\"list-group\">\r\n                        {React.Children.map(this.props.children,\r\n                            (child)=>{\r\n                                return React.cloneElement(child, { item });\r\n                            })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {Record};\r\n","import PersonDetails, {Record} from './item-details';\r\nexport default PersonDetails;\r\nexport {Record};\r\n","import React, {Component} from 'react';\r\nimport Spinner  from '../spinner/spiner';\r\nimport ErrorIndicator from '../error-indicator';\r\nconst withData = (View) =>{\r\n    return class extends Component{\r\n        state={\r\n            data: null,\r\n            loading:true,\r\n            error: false\r\n        };\r\n\r\n        componentDidUpdate(prevProps) {\r\n            if (this.props.getData !== prevProps.getData){\r\n                this.update();\r\n            }\r\n        }\r\n        componentDidMount() {\r\n            this.update();\r\n        }\r\n\r\n        update(){\r\n            this.setState({\r\n                loading:true,\r\n                error: false\r\n            });\r\n            console.log('loading');\r\n            this.props.getData()\r\n                .then((data)=>{\r\n                this.setState({\r\n                    data,\r\n                    loading:false\r\n                });\r\n            })\r\n                .catch(()=>{\r\n                    this.setState({\r\n                        error: true,\r\n                        loading: false\r\n                    })\r\n                })\r\n        }\r\n\r\n        render() {\r\n            const {data, loading, error}=this.state;\r\n            if (loading){\r\n                return <Spinner />;\r\n            }\r\n            if (error){\r\n                return <ErrorIndicator />\r\n            }\r\n            return <View {...this.props} data={data}></View>\r\n        }\r\n    }\r\n};\r\nexport default withData;\r\n","import React from 'react';\r\nimport { SwapiServiceConsumer } from \"../swapi-service-context\";\r\n\r\nconst withSwapiService = (mapMethodsToProps)=> (Wrapped)=>{\r\n\r\n    return (props)=>{\r\n        return(\r\n            <SwapiServiceConsumer>\r\n                {\r\n                    (swapiService)=>{\r\n                        const serviceProps = mapMethodsToProps(swapiService);\r\n                        return(\r\n                          <Wrapped {...props} {...serviceProps} />\r\n                        );\r\n                    }\r\n                }\r\n            </SwapiServiceConsumer>\r\n        );\r\n    }\r\n};\r\nexport default withSwapiService;\r\n","import React from \"react\";\r\n\r\nconst withChildFunction = (fn) => (Wrapped) =>{\r\n    return(props)=>{\r\n        return(\r\n            <Wrapped {...props}>\r\n                {fn}\r\n            </Wrapped>\r\n        )\r\n    }\r\n};\r\nexport default withChildFunction;\r\n","const compose = (...funcs) => (component) =>{\r\n\r\n    return funcs.reduceRight(\r\n        (previousValue, value)=> value(previousValue), component);\r\n};\r\nexport default compose;\r\n","import {SwapiServiceConsumer} from \"../swapi-service-context\";\r\nimport ItemDetails from \"../item-details\";\r\nimport {Record} from \"../item-details\";\r\nimport {withSwapiService} from '../hoc-helpers';\r\nimport React from \"react\";\r\n\r\nconst PlanetDetails = (props) =>{\r\n    return(\r\n        <ItemDetails {...props}>\r\n            <Record field=\"population\" label=\"Population \" />\r\n            <Record field=\"rotationPeriod\" label=\"Rotation period \" />\r\n            <Record field=\"diameter\" label=\"Diameter \" />\r\n        </ItemDetails>\r\n    );\r\n};\r\nconst mapMethodsToProps = (swapiService)=>{\r\n    return{\r\n        getData: swapiService.getPlanet,\r\n        getImageUrl: swapiService.getPlanetImage\r\n    }\r\n};\r\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);\r\n","import ItemDetails from \"../item-details\";\r\nimport {Record} from \"../item-details\";\r\nimport React from \"react\";\r\nimport {withSwapiService} from '../hoc-helpers';\r\n\r\nconst PersonDetails = (props) =>{\r\n    return (\r\n        <ItemDetails {...props}>\r\n            <Record field=\"gender\" label=\"Gender \" />\r\n            <Record field=\"eyeColor\" label=\"Eye color \" />\r\n        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService)=>{\r\n    return{\r\n        getData: swapiService.getPerson,\r\n        getImageUrl: swapiService.getPersonImage\r\n    }\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);\r\n","import ItemDetails from \"../item-details\";\r\nimport {withSwapiService} from '../hoc-helpers';\r\nimport {Record} from \"../item-details\";\r\nimport React from \"react\";\r\n\r\nconst StarshipDetails = (props) =>{\r\n    return(\r\n        <ItemDetails {...props}>\r\n            <Record field=\"model\" label=\"Model \" />\r\n            <Record field=\"length\" label=\"Length \" />\r\n            <Record field=\"costInCredits\" label=\"Cost in credits \" />\r\n        </ItemDetails>\r\n    );\r\n};\r\nconst mapMethodsToProps = (swapiService)=>{\r\n    return{\r\n        getData: swapiService.getStarship,\r\n        getImageUrl: swapiService.getStarshipImage\r\n    }\r\n};\r\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);\r\n","import React from 'react';\r\nimport './item-list.css';\r\nimport PropTypes from 'prop-types';\r\nconst ItemList = (props) => {\r\n        const {data, onItemSelected, children: renderLabel} = props;\r\n        const items = data.map((item)=>{\r\n            const {id} = item;\r\n            const label = renderLabel(item);\r\n            return(\r\n                <li className=\"list-group-item\"\r\n                    key={id}\r\n                    onClick={()=>onItemSelected(id)}>\r\n                    {label}\r\n                </li>\r\n            );\r\n        });\r\n        return(\r\n            <ul className=\"list-group\">\r\n                {items}\r\n            </ul>\r\n        );\r\n};\r\nItemList.defaultProps ={\r\n    onItemSelected:()=>{}\r\n};\r\nItemList.propTypes = {\r\n    data:PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onItemSelected: PropTypes.func\r\n}\r\n\r\nexport default ItemList;\r\n","import ItemList from './item-list';\r\nexport default ItemList;\r\n","import React from 'react';\r\nimport ItemList from '../item-list';\r\nimport {withData,\r\n    withSwapiService,\r\n    withChildFunction,\r\n    compose}from '../hoc-helpers';\r\n\r\n\r\nconst renderName = ({name})=> <span>{name}</span>;\r\nconst renderModelAndName = ({model, name})=><span>{name}, ({model})</span>;\r\n\r\nconst  mapPersonMethodsToProps = (swapiService) =>{\r\n     return{getData: swapiService.getAllPeople}\r\n};\r\nconst  mapPlanetMethodsToProps = (swapiService) =>{\r\n    return{getData: swapiService.getAllPlanets}\r\n};\r\nconst  mapStarshipMethodsToProps = (swapiService) =>{\r\n    return{getData: swapiService.getAllStarship}\r\n};\r\n\r\n\r\nconst PersonList = compose(\r\n    withSwapiService(mapPersonMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName)\r\n)(ItemList);\r\n\r\nconst PlanetList = compose(\r\n    withSwapiService(mapPlanetMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName)\r\n)(ItemList);\r\n\r\nconst StarshipList = compose(\r\n    withSwapiService(mapStarshipMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderModelAndName)\r\n)(ItemList);\r\n\r\nexport {PersonList,PlanetList,StarshipList}\r\n","import Row from './row';\r\nexport default Row;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Row = ({left, right}) =>{\r\n    return(\r\n        <div className=\"row mb-2\">\r\n            <div className=\"col-md-6\">\r\n                {left}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                {right}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nRow.propTypes ={\r\n    left: PropTypes.node,\r\n    right: PropTypes.node\r\n};\r\nexport default Row;\r\n","import React, {Component} from 'react';\r\nimport {PlanetDetails, PlanetList} from \"../sw-components\";\r\nimport Row from \"../Row\";\r\n\r\nexport default class PlanetsPage extends Component{\r\n    state = {\r\n        selectedItem: 1\r\n    };\r\n    onItemSelected = (selectedItem) => {\r\n        this.setState({selectedItem})\r\n    };\r\n    render(){\r\n        const {selectedItem} = this.state;\r\n        return(\r\n            <Row\r\n                left={<PlanetDetails itemId={selectedItem} />}\r\n                right={<PlanetList onItemSelected={this.onItemSelected} />} />\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {PersonDetails, PersonList} from \"../sw-components\";\r\nimport Row from \"../Row\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../item-details/person-details.css';\r\nconst PeoplePage =({match, history})=>{\r\n    const {id} = match.params;\r\n    return(\r\n            <Row\r\n                left={<PersonDetails itemId={id} />}\r\n                right={<PersonList onItemSelected={(id)=>{\r\n                    history.push(id)\r\n                }} />} />\r\n        );\r\n};\r\nexport default withRouter(PeoplePage);\r\n","import React, {Component} from 'react';\r\nimport {StarshipList} from \"../sw-components\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst StarshipPage = ({history}) =>{\r\n    return(\r\n        <StarshipList\r\n            onItemSelected={\r\n                (itemId)=>{\r\n                    history.push(itemId);\r\n                }} />\r\n    );\r\n};\r\nexport default withRouter(StarshipPage);\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nconst SecretPage = ({isLoggedIn})=>{\r\n    if (isLoggedIn){\r\n        return(\r\n            <div><h3>This page is full of secrets</h3></div>\r\n        );\r\n    }\r\n    return <Redirect to=\"/login\" />;\r\n};\r\nexport default SecretPage;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nconst LoginPage = ({isLoggedIn, onLogin})=>{\r\n    if (isLoggedIn){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return(\r\n        <div className=\"jumbotron\">\r\n            <p>Login to see secret page</p>\r\n            <button\r\n            className=\"btn btn-primary\"\r\n            onClick={onLogin}>\r\n                Login\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default LoginPage;\r\n","import App from './app';\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport './app.css';\r\nimport Header from '../header';\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport DummySwapiService from \"../../services/dummy-swapi-service\";\r\nimport {SwapiServiceProvider} from '../swapi-service-context';\r\nimport RandomPlanet from \"../random-planet\";\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport {\r\n    PeoplePage,\r\n    PlanetsPage,\r\n    StarshipPage,\r\n    SecretPage,\r\n    LoginPage} from '../pages';\r\nimport StarshipDetails from \"../sw-components/starship-details\";\r\n\r\nexport default class Ap extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state={\r\n        hasError: false,\r\n        isLoggedIn: false,\r\n        swapiService: new SwapiService()\r\n    };\r\n    onLogin = () => {\r\n        this.setState({\r\n            isLoggedIn: true\r\n        })\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({hasError:true})\r\n    }\r\n    onServiceChange = () => {\r\n        this.setState(({swapiService})=>{\r\n            const Service = swapiService instanceof SwapiService ?\r\n                DummySwapiService: SwapiService;\r\n            return {\r\n                swapiService: new Service\r\n            }\r\n        })\r\n    };\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <ErrorIndicator></ErrorIndicator>\r\n        }\r\n        const {isLoggedIn} = this.state;\r\n        return(\r\n            <SwapiServiceProvider value={this.state.swapiService}>\r\n                <Router>\r\n                    <Header onServiceChange={this.onServiceChange} />\r\n                    <div className=\"contain container\">\r\n                        <RandomPlanet />\r\n                        <div className=\"d-block\">\r\n                        <Switch>\r\n                            <Route path=\"/\" exact render={()=><h2>Welcome to StarDB</h2> } />\r\n                            <Route path=\"/people\" exact render={()=><h2>People</h2>} />\r\n                            <Route path=\"/planets\" component={PlanetsPage} />\r\n                            <Route path=\"/starships\" exact component={StarshipPage} />\r\n                            <Route path=\"/starships/:id\"\r\n                                   render={({match, location, history})=>{\r\n                                       const {id} = match.params;\r\n                                       return <StarshipDetails itemId={id} />\r\n                                   }}/>\r\n                            <Route path=\"/login\"\r\n                                   render={()=><LoginPage isLoggedIn={false} onLogin={this.onLogin}/>}/>\r\n                            <Route path=\"/secret\"\r\n                                   render={()=><SecretPage isLoggedIn={isLoggedIn} />}/>\r\n                            <Route render={()=><h2>Page not found</h2>}/>\r\n                        </Switch>\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            </SwapiServiceProvider>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\n\nimport Ap from './components/app'\n/*\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\n*/\n\n/*const swapi = new SwapiService();\n\nswapi.getAllPeople().then(people => {\n    people.forEach(p=>{\n        console.log(p.name)\n    })\n})\n*/\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Ap></Ap>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}